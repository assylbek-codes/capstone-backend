version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=warehouse_platform
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    restart: always

  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=warehouse_platform
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: always

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: always

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.worker worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=warehouse_platform
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      - redis
    networks:
      - app-network
    restart: always

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
